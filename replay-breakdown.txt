Notes:
1. Actions are set of joint states
2. Playing action = publishing joint states sequentially
3. Motion-Follower translates video input into joint states
4. Joint states are published by Motion-Follower as node topic (op3_motion_follower/op3_joints_pub_)
5. Web-interface would be convenient to handle recording/replaying/saving,
	alternatively, can use the buttons on the robot

Motion-Follower: https://github.com/Seri-Lee/robotis_op3_following_motion

*Starting position of action and ending position might conflict with current
robot position: standardizing these would guarentee consistency*

Joint State List Example: 
Initial Pos -> state1 -> state2 -> ... -> stateN

--------------
User Actions:
 - Record
 - Play/Verify
 - Store
 - Retrieve

Use Cases:
 - Record arbitrary length actions
 - Store actions
--------------

Execution Flow:
Init Motion-Following Node
Init Replay Node
	-Subscribe to joint state topic


Replay Node Algorithms:
	
Initialization
0. Create empty list of joint states (Replay-List)

Recording Action
0. Subscribe to joint state topic and button topic for start/stopping
1. Append initial joint state to Replay-List
2. Begin "motion-following" mode
	a. Append joint state as they are published to the topic

3. When stopping:
		Stop "motion-following" mode
		Return to intial position using "defaults"

Playing(Verifying) Action
1. Initial Position
2. Iterate through list of joint states
	a. Publish each to robot

Storing Action
1. Iterate through list of joint states
2. For each joint state, write value to file

Retrieving Action
1. Locate file for action
2. Read values into local joint state list

